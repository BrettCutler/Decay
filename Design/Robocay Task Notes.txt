Robocay Task Notes
======================
X Place character in voxel terrain
* Test "SuperCharacterController" for character
    X Character is falling through level -- FIND OUT WHY
        - fixed by adding 'BSPTree' component to Chunk
    * Increase height character can auto-solve up (staircase height)

* Fix lines between blocks

* Build basic UI
* Create soil types
    * polluted
    * cleared
    * tilled
    * plant
    * tree

Voxel
--------------
* Stop world auto-generation
* Add ramp blocks
    * automatically generate on height differences on dirt terrain
* Kill wild grass generation
* Figure out updater system in Voxelmetric
* Build level design UI
    * Choose tile type
    * Place/remove tile
    * DON'T need to get other object placement -- Unity can do this just fine
* Investigate Update pattern

[x] finish tutorial
[x] modify y-size to .33, or .25
    * places to add scalar:
        * World.cs
            * CreateChunk at position, pos.y needs to be scaled when Instantiating
        * WorldPos.cs
            * I don't think this refers to *literal* position, just index position
        * Block.cs
            * FaceData[North/South/etc]() generates vertices; scale y
            *
        * Terrain.cs
            * GetBlockPos( Vector3 pos ):
                Grabs WorldPos directly from Vector3 which is rounded
                * So here we need an extra conversion
                    * And clarify names: WorldPos is either truly position in WorldSpace (rename: WorldSpacePos) or is block index across entire world (rename: WorldBlockIndexPos)

        * LoadChunks.cs
            * FindChunksToLoad(): transforms player's real position into worldPos index
                * for some reason this seems to assume world's min, max yHeight rather that using player's position to offset...

* Wrap all voxel classes in a namespace